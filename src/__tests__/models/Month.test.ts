import { Month } from "../../models/Month"

describe("Month", () => {
  it("Parses Month number correctly", () => {
    expect(Month.parseNumber(0)).toEqual(Month.January)
    expect(Month.parseNumber(1)).toEqual(Month.February)
    expect(Month.parseNumber(2)).toEqual(Month.March)
    expect(Month.parseNumber(3)).toEqual(Month.April)
    expect(Month.parseNumber(4)).toEqual(Month.May)
    expect(Month.parseNumber(5)).toEqual(Month.June)
    expect(Month.parseNumber(6)).toEqual(Month.July)
    expect(Month.parseNumber(7)).toEqual(Month.August)
    expect(Month.parseNumber(8)).toEqual(Month.September)
    expect(Month.parseNumber(9)).toEqual(Month.October)
    expect(Month.parseNumber(10)).toEqual(Month.November)
    expect(Month.parseNumber(11)).toEqual(Month.December)
  })

  it("Throws error on invalid month number", () => {
    expect(() => Month.parseNumber(-1)).toThrow()
    expect(() => Month.parseNumber(12)).toThrow()
  })

  it("Parses Month string correctly", () => {
    expect(Month.parse("0")).toEqual(Month.January)
    expect(Month.parse("00")).toEqual(Month.January)
    expect(Month.parse("1")).toEqual(Month.February)
    expect(Month.parse("01")).toEqual(Month.February)
    expect(Month.parse("2")).toEqual(Month.March)
    expect(Month.parse("02")).toEqual(Month.March)
    expect(Month.parse("3")).toEqual(Month.April)
    expect(Month.parse("03")).toEqual(Month.April)
    expect(Month.parse("4")).toEqual(Month.May)
    expect(Month.parse("04")).toEqual(Month.May)
    expect(Month.parse("5")).toEqual(Month.June)
    expect(Month.parse("05")).toEqual(Month.June)
    expect(Month.parse("6")).toEqual(Month.July)
    expect(Month.parse("06")).toEqual(Month.July)
    expect(Month.parse("7")).toEqual(Month.August)
    expect(Month.parse("07")).toEqual(Month.August)
    expect(Month.parse("8")).toEqual(Month.September)
    expect(Month.parse("08")).toEqual(Month.September)
    expect(Month.parse("9")).toEqual(Month.October)
    expect(Month.parse("09")).toEqual(Month.October)
    expect(Month.parse("10")).toEqual(Month.November)
    expect(Month.parse("11")).toEqual(Month.December)
  })

  it("Throws error on invalid month string", () => {
    expect(() => Month.parse("-1")).toThrow()
    expect(() => Month.parse("12")).toThrow()
    expect(() => Month.parse("abc")).toThrow()
    expect(() => Month.parse("")).toThrow()
  })

  it("Generates correct string", () => {
    expect(Month.toString(Month.January)).toEqual("0")
    expect(Month.toString(Month.February)).toEqual("1")
    expect(Month.toString(Month.March)).toEqual("2")
    expect(Month.toString(Month.April)).toEqual("3")
    expect(Month.toString(Month.May)).toEqual("4")
    expect(Month.toString(Month.June)).toEqual("5")
    expect(Month.toString(Month.July)).toEqual("6")
    expect(Month.toString(Month.August)).toEqual("7")
    expect(Month.toString(Month.September)).toEqual("8")
    expect(Month.toString(Month.October)).toEqual("9")
    expect(Month.toString(Month.November)).toEqual("10")
    expect(Month.toString(Month.December)).toEqual("11")
  })
})
